spring:
  config:
    import: optional:file:.env[.properties]

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL:jdbc:mysql://localhost:3306/json_store}
    username: ${DB_USERNAME:json}
    password: ${DB_PASSWORD:jsonpw}

  jwt:
    secret-key: "${SECRET_KEY}"

  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
    defer-datasource-initialization: true
  sql:
    init:
      mode: always

  data:
    redis:
      host: localhost
      port: ${REDIS_PORT:6379}

  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_KEY}
      region:
        static: ${REGION}
      s3:
        bucket: ${BUCKET_NAME}

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

fcm:
  credentials:
    file: classpath:firebaseAccessKey.json

portone:
  store-id: ${PORTONE_STORE_ID}
  api-key: ${PORTONE_API_KEY}
  api-base: ${PORTONE_API_BASE}
  api-secret: ${PORTONE_API_SECRET}
  webhook:
    secret-key: ${PORTONE_WEBHOOK_SECRET_KEY}


